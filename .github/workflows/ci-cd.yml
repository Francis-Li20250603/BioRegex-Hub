name: 纯云端构建与测试流程

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest  # 完全在 GitHub 云端执行
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: 拉取代码
        uses: actions/checkout@v4

      - name: 安装 Python 环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 安装 Node.js 环境
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 安装系统依赖
        run: |
          sudo apt-get update && sudo apt-get install -y \
            build-essential \
            libssl-dev \
            libffi-dev \
            python3-dev \
            libpq-dev \
            libmagic-dev \
            postgresql-client

      - name: 安装后端依赖
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip cache purge
          pip install --no-cache-dir -r requirements.txt
          pip install --no-cache-dir "pydantic[email]" pytest pytest-cov

      - name: 等待 PostgreSQL 就绪
        run: |
          for i in {1..10}; do
            pg_isready -U postgres -h localhost && break
            sleep 2
          done

      - name: 初始化测试数据库
        run: |
          export PGPASSWORD=postgres
          psql -U postgres -h localhost -d test_db -c "CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";"

      - name: 执行数据库迁移
        working-directory: backend
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        run: python scripts/init_db.py

      - name: 运行后端测试
        working-directory: backend
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          SECRET_KEY: test-secret-key
          ALGORITHM: HS256
          ACCESS_TOKEN_EXPIRE_MINUTES: 30
        run: pytest -v tests/ --cov=app

      - name: 安装前端依赖
        working-directory: frontend
        run: npm ci

      - name: 运行前端测试
        working-directory: frontend
        run: npm run test

  build-and-push-images:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4

      - name: 登录 GitHub 容器仓库
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 构建并推送后端镜像
        uses: docker/build-push-action@v5
        with:
          context: backend
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/bioregex-hub-backend:latest

      - name: 构建并推送前端镜像
        uses: docker/build-push-action@v5
        with:
          context: frontend
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/bioregex-hub-frontend:latest
