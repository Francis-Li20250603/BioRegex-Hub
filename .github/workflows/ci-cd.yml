name: 全云端 CI/CD 流程

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    # 添加系统依赖（关键：解决 bcrypt 编译问题）
    - name: Install system dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y \
          build-essential \
          libssl-dev \
          libffi-dev \
          python3-dev \
          libpq-dev \
          libmagic-dev

    - name: Install backend dependencies
      working-directory: backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install "pydantic[email]" pytest pytest-cov

    - name: Install PostgreSQL client
      run: sudo apt-get -yqq install postgresql-client

    - name: Wait for PostgreSQL
      run: |
        for i in {1..10}; do
          pg_isready -U postgres -h localhost && break
          sleep 2
        done

    - name: Initialize test database
      run: |
        export PGPASSWORD=postgres
        psql -U postgres -h localhost -d test_db -c "CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";"

    - name: Run database migrations
      working-directory: backend
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
      run: python scripts/init_db.py

    - name: Run backend tests
      working-directory: backend
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        SECRET_KEY: test-secret-key
        ALGORITHM: HS256
        ACCESS_TOKEN_EXPIRE_MINUTES: 30
      run: pytest -v tests/ --cov=app

    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci

    - name: Run frontend tests
      working-directory: frontend
      run: npm run test

  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@
